What happens when you initialize a repository? Why do you need to do it?

How is the staging area different from the working directory and the repository?
What value do you think it offers?

How can you use the staging area to make sure you have one commit per logical
change?

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

How do the diagrams help you visualize the branch structure?

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?

How is the staging area different from the working directory and the repository? What value do you think it offers?

Repository is like a history of changes in the file(s).
Not all files are committed to the repository. If any file is not added to the staging area, they won’t be committed to the repository.

How can you use the staging area to make sure you have one commit per logical change?

Use ‘git diff’ and ‘git diff —- staged’ to check either one or more changes have been made.


What are some situations when branches would be helpful in keeping your history organized? How would branches help?

Branches would be useful when you want different versions of a program, probably because you want a version in another language, or probably because you want to experiment with some changes.

How do the diagrams help you visualize the branch structure?

The diagrams can help you know on which branch you are working. It is also helpful to visualize the relationship between branches.

