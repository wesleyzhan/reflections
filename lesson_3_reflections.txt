When would you want to use a remote repository rather than keeping all your work local?

-Keeping things in Cloud nowadays are much more safe in terms of the storing of data.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

-As mentioned in lesson 1, manual commits would be much more logical than automatic ones.

Describe the differences between forks, clones, and branches. When would you use one instead of another?

-These 3 things are totally different, though to some extent similar.

Clone: quite similar to making a copy of a repository either from the local computer to github or vice versa. You should use this one when you want to operate on the respository in terminal.

Fork: make a copy from a github respository to your respository. This one is useful when you want to copy another user's respository.

Branch: to deviate from your master branch and experiement with some new features without worrying about bugs or alike. Thus it is quite helpful when you want to experiement a little bit.

What is the benefit of having a copy of the last known state of the remote stored locally?

- First, you can reset your commits. Second, you can compare anytime your last modification with the last known state of remote.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

-I might have to send files back and forth, save it in the cloud, etc. Git and Github would definitely make life easier.

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?

-When I want to try something new, experiement a little bit, without interrupting the ongoing project or causing any bugs. Operating on the master branch could be a more direct work, because you don't have to go back and merge changes; however, starting another branch isn't that inconvenient.
